% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FRN.R
\name{FRN}
\alias{FRN}
\title{Simulate a fixed randomization design for a multi-arm N-of-1 trial}
\usage{
FRN(
  n_subj,
  n_trts,
  n_periods,
  n_obvs,
  betas,
  y_sigma,
  stanfile,
  chains,
  warmup,
  iter,
  adapt_delta = 0.999,
  max_treedepth = 17
)
}
\arguments{
\item{n_subj}{Integer indicating number of subjects in trial}

\item{n_trts}{Integer indicating number of treatments in trial}

\item{n_periods}{Integer indicating number of treatment periods in trial}

\item{n_obvs}{Integer indicating how many observations should be recorded from a particular treatment regime}

\item{betas}{Matrix containing treatment effects for each individual (rows) and treatment (columns)}

\item{y_sigma}{Double indicating amount of within-person variance}

\item{stanfile}{Character vector indicating path of Stan model (.stan)}

\item{chains}{Integer indicating number of chains to use in MCMC}

\item{warmup}{Integer indicating how long the warmup period for MCMC should be}

\item{iter}{Integer indicating the total number of posterior samples to generate}

\item{adapt_delta}{Integer indicating the step size for MCMC}

\item{max_treedepth}{Integer indicating the maximum tree depth for MCMC}
}
\value{
List containing the simulation parameters and resulting trial data that came from the parameters
}
\description{
\code{FRN()} simulates a fixed randomization scheme for an N-of-1 trial. The
treatments are randomly ordered and given to the subject. This process is
repeated for some number of cycles. At the end of the trial simulation, an
analysis on the population level treatment effect is performed.
}
\examples{
\dontrun{
# Generating data for simulation
set.seed(1)

# Covariance between betas, factorized into scalar and correlation components
tau = 2 * diag(3)
Omega = diag(3)
Omega[1,2] = Omega[2,1] = 0.1
Omega[1,3] = Omega[3,1] = 0.1
Omega[3,2] = Omega[2,3] = 0.1
Sigma = tau \%*\% Omega \%*\% tau

# Generating individual treatment effects from population level
betas = MASS::mvrnorm(n = 2, mu = c(3, -2, 4), Sigma = Sigma)
betas = round(betas, 1)
1
frn = FRN(n_subj = 2, n_cycles = 3, n_obvs = 5, n_trts = 3, y_sigma = 2,
          satnfile = stanfile, betas = betas, chains = 1, warmup = 1000,
          iter = 3000)
}
}
